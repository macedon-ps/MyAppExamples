@* Сгенерированная разметка
@page "/"

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app. 
*@

@using Microsoft.AspNetCore.Components.Web

@page "/"
@rendermode RenderMode.InteractiveServer
@inject IHttpClientFactory ClientFactory

@* Пример 1. HtppClient 

<h2>@time</h2>
<button @onclick="Submit">Click</button>

@code {
    string? time;

    async Task Submit()
    {
        HttpClient httpClient = ClientFactory.CreateClient();

        var response = await httpClient.GetAsync("https://localhost:7289/time");

        time = await response.Content.ReadAsStringAsync();
    }
}
*@

@* Пример 2. Отправка данных через HtppClient. Метод POST *@

<div style="color:red;">@errorMessage</div>
<div style="color:blue;">@message</div>

<div>
    <p>
        Имя:<br />
        <input @bind-value="person.Name" />
    </p>
    <p>
        Возраст:<br />
        <input type="number" @bind-value="person.Age" />
    </p>
    <button @onclick="Submit">Click</button>
</div>

@code {
    string? message;
    string? errorMessage;
    Person person = new();

    async Task Submit()
    {
        message = "";
        HttpClient httpClient = ClientFactory.CreateClient();

        var response = await httpClient.PostAsJsonAsync("https://localhost:7289/user", person);

        if (response.IsSuccessStatusCode)
        {
            var newPerson = await response.Content.ReadFromJsonAsync<Person>();
            if (newPerson != null) {
                message = $"Создан объект Person с id = {newPerson.Id} | Name: {newPerson.Name} | Age: {newPerson.Age}";
                errorMessage = "";
            }
        }
        else
        {
            var error = await response.Content.ReadFromJsonAsync<HomeError>();
            if (error != null) errorMessage = error.Details;
        }
    }
}